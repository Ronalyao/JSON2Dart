{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://json2dart/./src/extension.ts","webpack://json2dart/external commonjs \"vscode\"","webpack://json2dart/external node-commonjs \"path\"","webpack://json2dart/webpack/bootstrap","webpack://json2dart/webpack/startup"],"sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport * as path from 'path';\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n    let disposable = vscode.commands.registerCommand('json2dart.convert', async (uri: vscode.Uri) => {\n        // 获取文件名（不带扩展名）并首字母大写\n        const fileName = path.parse(uri.fsPath).name;\n        const className = fileName.charAt(0).toUpperCase() + fileName.slice(1);\n\n        // 创建输入框\n        const jsonInput = await vscode.window.showInputBox({\n            prompt: '请输入JSON数据',\n            placeHolder: '{\"key\": \"value\"}'\n        });\n\n        if (!jsonInput) return;\n\n        try {\n            // 解析JSON\n            const jsonData = typeof jsonInput === 'string' ? JSON.parse(jsonInput) : jsonInput;\n            \n            // 生成Dart代码\n            const generatedCode = generateDartModel(className, jsonData);\n\n            // 获取活动编辑器\n            const editor = vscode.window.activeTextEditor;\n            if (editor) {\n                const document = editor.document;\n                const fullText = document.getText();\n\n                // 查找已存在的生成代码区域\n                const startComment = '// BEGIN: Generated code';\n                const endComment = '// END: Generated code';\n                const startIndex = fullText.indexOf(startComment);\n                const endIndex = fullText.indexOf(endComment);\n\n                editor.edit(editBuilder => {\n                    if (startIndex !== -1 && endIndex !== -1) {\n                        // 替换已存在的区域\n                        const range = new vscode.Range(\n                            document.positionAt(startIndex),\n                            document.positionAt(endIndex + endComment.length)\n                        );\n                        editBuilder.replace(range, `${startComment}\\n${generatedCode}\\n${endComment}`);\n                    } else {\n                        // 在文件末尾添加新代码\n                        const position = new vscode.Position(document.lineCount, 0);\n                        editBuilder.insert(position, `\\n${startComment}\\n${generatedCode}\\n${endComment}\\n`);\n                    }\n                });\n            }\n        } catch (error) {\n            vscode.window.showErrorMessage('JSON解析错误：' + (error as Error).message);\n        }\n    });\n\n    context.subscriptions.push(disposable);\n}\n\nfunction generateDartModel(className: string, json: any, classes: Set<string> = new Set()): string {\n    let code = `class ${className} {\\n`;\n    const subClasses: string[] = [];\n\n    // 生成属性\n    for (const [key, value] of Object.entries(json)) {\n        const type = getPropertyType(key, value, classes, subClasses);\n        code += `  ${type} ${key};\\n`;\n    }\n\n    // 生成构造函数\n    code += `\\n  ${className}({\\n`;\n    for (const [key] of Object.entries(json)) {\n        code += `    required this.${key},\\n`;\n    }\n    code += `  });\\n\\n`;\n\n    // 生成 fromJson 方法\n    code += `  factory ${className}.fromJson(Map<String, dynamic> json) => ${className}(\\n`;\n    for (const [key, value] of Object.entries(json)) {\n        const fromJsonValue = generateFromJsonValue(key, value);\n        code += `    ${key}: ${fromJsonValue},\\n`;\n    }\n    code += `  );\\n\\n`;\n\n    // 生成 toJson 方法\n    code += `  Map<String, dynamic> toJson() => {\\n`;\n    for (const [key, value] of Object.entries(json)) {\n        const toJsonValue = generateToJsonValue(key, value);\n        code += `    '${key}': ${toJsonValue},\\n`;\n    }\n    code += `  };\\n`;\n    code += `}\\n\\n`;\n\n    // 添加嵌套类\n    code += subClasses.join('\\n');\n\n    return code;\n}\n\nfunction getPropertyType(key: string, value: any, classes: Set<string>, subClasses: string[]): string {\n    if (value === null) return 'dynamic';\n    if (typeof value === 'string') return 'String';\n    if (typeof value === 'number') return Number.isInteger(value) ? 'int' : 'double';\n    if (typeof value === 'boolean') return 'bool';\n    if (Array.isArray(value)) {\n        const itemType = value.length > 0 ? getPropertyType(key, value[0], classes, subClasses) : 'dynamic';\n        return `List<${itemType}>`;\n    }\n    if (typeof value === 'object') {\n        const subClassName = key.charAt(0).toUpperCase() + key.slice(1);\n        if (!classes.has(subClassName)) {\n            classes.add(subClassName);\n            subClasses.push(generateDartModel(subClassName, value, classes));\n        }\n        return subClassName;\n    }\n    return 'dynamic';\n}\n\nfunction generateFromJsonValue(key: string, value: any): string {\n    if (value === null) return `json['${key}']`;\n    if (typeof value === 'object' && !Array.isArray(value)) {\n        const className = key.charAt(0).toUpperCase() + key.slice(1);\n        return `${className}.fromJson(json['${key}'])`;\n    }\n    if (Array.isArray(value) && value.length > 0 && typeof value[0] === 'object') {\n        const className = key.charAt(0).toUpperCase() + key.slice(1);\n        return `(json['${key}'] as List).map((e) => ${className}.fromJson(e)).toList()`;\n    }\n    return `json['${key}']`;\n}\n\nfunction generateToJsonValue(key: string, value: any): string {\n    if (value === null) return key;\n    if (typeof value === 'object' && !Array.isArray(value)) {\n        return `${key}.toJson()`;\n    }\n    if (Array.isArray(value) && value.length > 0 && typeof value[0] === 'object') {\n        return `${key}.map((e) => e.toJson()).toList()`;\n    }\n    return key;\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}","module.exports = require(\"vscode\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","disposable","vscode","commands","registerCommand","async","uri","fileName","path","parse","fsPath","name","className","charAt","toUpperCase","slice","jsonInput","window","showInputBox","prompt","placeHolder","generatedCode","generateDartModel","JSON","editor","activeTextEditor","document","fullText","getText","startComment","endComment","startIndex","indexOf","endIndex","edit","editBuilder","range","Range","positionAt","length","replace","position","Position","lineCount","insert","error","showErrorMessage","message","subscriptions","push","json","classes","Set","code","subClasses","key","value","Object","entries","getPropertyType","generateFromJsonValue","generateToJsonValue","join","Number","isInteger","Array","isArray","subClassName","has","add","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}